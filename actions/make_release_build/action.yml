name: 'Make release build'
description: '[macOS only] Build a release for a specific cpu architecture and update the release metadata if needed.'
inputs:
  # See 'arch' in https://www.electron.build/cli.html#targetconfiguration
  architecture:
    description: 'cpu architecture'
    required: true
  should_publish:
    description: 'should publish'
    required: true
  # macOS signing
  MAC_CERTIFICATE:
    description: 'Mac certificate for signing.'
    required: false
  MAC_CERTIFICATE_PASSWORD:
    description: 'Password for the Mac certificate.'
    required: false
  SIGNING_APPLE_ID:
    description: 'Apple ID for signing.'
    required: false
  SIGNING_APP_PASSWORD:
    description: 'App-specific password for Apple ID.'
    required: false
  SIGNING_TEAM_ID:
    description: 'Apple Team ID for signing.'
    required: false


runs:
  using: 'composite'
  steps:
    - name: Build but do not publish
      # always run this, except on "push" to "master" or alpha releases
      if: ${{ inputs.should_publish == 'false' }}
      shell: bash
      env:
        MAC_CERTIFICATE: ${{ inputs.MAC_CERTIFICATE }}
        MAC_CERTIFICATE_PASSWORD: ${{ inputs.MAC_CERTIFICATE_PASSWORD }}
        SIGNING_APPLE_ID: ${{ inputs.SIGNING_APPLE_ID }}
        SIGNING_APP_PASSWORD: ${{ inputs.SIGNING_APP_PASSWORD }}
        SIGNING_TEAM_ID: ${{ inputs.SIGNING_TEAM_ID }}
      run: |
        ./build/setup-mac-certificate.sh
        yarn build-release --config.mac.bundleVersion=${{ github.ref }}

    - name: Upload artefacts
      # always run this, except on "push" to "master" or alpha releases
      if: ${{ inputs.should_publish == 'false' }}
      uses: ./actions/upload_prod_artefacts
      with:
        upload_prefix: mac-${{ inputs.architecture }}

    - name: Build & publish
      # only run this on "push" to "master" or alpha releases
      if: ${{ inputs.should_publish == 'true' }}
      shell: bash
      env:
        MAC_CERTIFICATE: ${{ inputs.MAC_CERTIFICATE }}
        MAC_CERTIFICATE_PASSWORD: ${{ inputs.MAC_CERTIFICATE_PASSWORD }}
        SIGNING_APPLE_ID: ${{ inputs.SIGNING_APPLE_ID }}
        SIGNING_APP_PASSWORD: ${{ inputs.SIGNING_APP_PASSWORD }}
        SIGNING_TEAM_ID: ${{ inputs.SIGNING_TEAM_ID }}
      run: |
        ./build/setup-mac-certificate.sh
        yarn build-release-publish --config.mac.bundleVersion=${{ github.ref }}

    - name: Setup release metadata
      # only run this on "push" to "master" or alpha releases
      if: ${{ inputs.should_publish == 'true' }}
      shell: bash
      run: |
        ./build/setup-mac-release-arch.sh ${{ inputs.architecture }}

    - name: Upload release metadata
      # only run this on "push" to "master" or alpha releases
      if: ${{ inputs.should_publish == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: latest-mac-${{ inputs.architecture }}.yml
        path: dist/latest-mac-${{ inputs.architecture }}.yml
